{
  "extends": [
    "eslint:recommended",
    "next/core-web-vitals",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "plugins": ["@typescript-eslint", "import", "unused-imports"],
  "parser": "@typescript-eslint/parser",
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "parserOptions": {
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "ignorePatterns": ["**/*.js", "vite.config.ts", "**/autogen"],
  "rules": {
    "react/jsx-boolean-value": "error",
    "react/jsx-curly-brace-presence": "error",
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "react/no-unescaped-entities": "off",
    "react/self-closing-comp": [
      "error",
      {
        "component": true,
        "html": true
      }
    ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-empty-function": "error",
    "no-unneeded-ternary": "error",
    "@typescript-eslint/no-unused-vars": "off",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "varsIgnorePattern": "^_"
      }
    ],
    "import/namespace": "off",
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          {
            "group": ["src/*"],
            "message": "Use alias `@`"
          },
          {
            "group": ["../../*"],
            "message": "Use absolute paths when using relative parent imports more than two levels deep"
          }
        ]
      }
    ],
    "import/no-named-as-default": "off"
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": [],
      "node": true
    }
  }
}
